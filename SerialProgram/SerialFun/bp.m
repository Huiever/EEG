function y = bp(x)
%BP Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.5 and DSP System Toolbox 9.7.
% Generated on: 25-May-2020 17:47:24

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Bandpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 250;  % Sampling Frequency
    %
    % Fstop1 = 0;                % First Stopband Frequency
    % Fpass1 = 2;                % First Passband Frequency
    % Fpass2 = 30;               % Second Passband Frequency
    % Fstop2 = 35;               % Second Stopband Frequency
    % Dstop1 = 0.1;              % First Stopband Attenuation
    % Dpass  = 0.057501127785;   % Passband Ripple
    % Dstop2 = 0.0031622776602;  % Second Stopband Attenuation
    % dens   = 20;               % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fstop1 Fpass1 Fpass2 Fstop2]/(Fs/2), [0 1 ...
    %                           0], [Dstop1 Dpass Dstop2]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [-0.007331113982651 -0.0106844616241956 ...
        -0.0147942470556412 -0.016706968925653 -0.0156181200614499 ...
        -0.0119433941761085 -0.00717163002662727 -0.00314644472415242 ...
        -0.00116577505447364 -0.00140463932212594 -0.00298836137112863 ...
        -0.00465329950046061 -0.00555266239152692 -0.0056747981893027 ...
        -0.00563588646554132 -0.00603801680477214 -0.00686923281953014 ...
        -0.0074357809556888 -0.006928168162764 -0.00519001587456642 ...
        -0.00311129401166624 -0.00224006200803368 -0.00371182616195671 ...
        -0.00727268776801994 -0.0110704062080969 -0.0126233642668529 ...
        -0.0104356613039919 -0.00527029448593152 -8.04828076681245e-05 ...
        0.00159285377653022 -0.00207167841803757 -0.00962878886390133 ...
        -0.0167650953035575 -0.0187090507933365 -0.0133530887716602 ...
        -0.00310617270221822 0.00595836967913068 0.0075365076778918 ...
        -0.000753460547438973 -0.0151268146686533 -0.027066585696576 ...
        -0.0281143420906654 -0.0154623632621697 0.0051222261167892 ...
        0.0213570002553864 0.0210759288343379 0.00011356458701155 ...
        -0.033110620292996 -0.0595825861744919 -0.0581417908006591 ...
        -0.0165817910070393 0.0603245878111942 0.150494706065776 ...
        0.222809767946317 0.25043053110238 0.222809767946317 0.150494706065776 ...
        0.0603245878111942 -0.0165817910070393 -0.0581417908006591 ...
        -0.0595825861744919 -0.033110620292996 0.00011356458701155 ...
        0.0210759288343379 0.0213570002553864 0.0051222261167892 ...
        -0.0154623632621697 -0.0281143420906654 -0.027066585696576 ...
        -0.0151268146686533 -0.000753460547438973 0.0075365076778918 ...
        0.00595836967913068 -0.00310617270221822 -0.0133530887716602 ...
        -0.0187090507933365 -0.0167650953035575 -0.00962878886390133 ...
        -0.00207167841803757 0.00159285377653022 -8.04828076681245e-05 ...
        -0.00527029448593152 -0.0104356613039919 -0.0126233642668529 ...
        -0.0110704062080969 -0.00727268776801994 -0.00371182616195671 ...
        -0.00224006200803368 -0.00311129401166624 -0.00519001587456642 ...
        -0.006928168162764 -0.0074357809556888 -0.00686923281953014 ...
        -0.00603801680477214 -0.00563588646554132 -0.0056747981893027 ...
        -0.00555266239152692 -0.00465329950046061 -0.00298836137112863 ...
        -0.00140463932212594 -0.00116577505447364 -0.00314644472415242 ...
        -0.00717163002662727 -0.0119433941761085 -0.0156181200614499 ...
        -0.016706968925653 -0.0147942470556412 -0.0106844616241956 ...
        -0.007331113982651]);
end

y = step(Hd,double(x));


% [EOF]
