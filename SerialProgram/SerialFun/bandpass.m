function y = bandpass(x)
%BANDPASS Filters input x and returns output y.

% MATLAB Code
% Generated by MATLAB(R) 9.5 and DSP System Toolbox 9.7.
% Generated on: 22-May-2020 21:56:13

%#codegen

% To generate C/C++ code from this function use the codegen command. Type
% 'help codegen' for more information.

persistent Hd;

if isempty(Hd)
    
    % The following code was used to design the filter coefficients:
    % % Equiripple Bandpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 250;  % Sampling Frequency
    %
    % Fstop1 = 2;               % First Stopband Frequency
    % Fpass1 = 5;               % First Passband Frequency
    % Fpass2 = 35;              % Second Passband Frequency
    % Fstop2 = 40;              % Second Stopband Frequency
    % Dstop1 = 0.001;           % First Stopband Attenuation
    % Dpass  = 0.057501127785;  % Passband Ripple
    % Dstop2 = 0.0001;          % Second Stopband Attenuation
    % dens   = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fstop1 Fpass1 Fpass2 Fstop2]/(Fs/2), [0 1 ...
    %                           0], [Dstop1 Dpass Dstop2]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [0.000375790071265041 0.00117724471920168 ...
        0.00239914775268492 0.00357158990637428 0.00389433853288986 ...
        0.00261093795856436 -0.000444939976507609 -0.00449135390003206 ...
        -0.00796803109331658 -0.00928301082581308 -0.00776616834395685 ...
        -0.00421107546256976 -0.000549009571814204 0.00126179780429956 ...
        0.000468827107608151 -0.00196386224748913 -0.00399134798982079 ...
        -0.00390425973016115 -0.00155465369499306 0.00151796380360198 ...
        0.00321103298779038 0.00244897994024061 4.55698323325315e-05 ...
        -0.00186500661370563 -0.00145988328605218 0.00130773047657074 ...
        0.00458417102657183 0.00600971890700992 0.00460204873319832 ...
        0.00163443250217651 -0.000268988101050573 0.000797506115569595 ...
        0.00440291600455968 0.00797216761812795 0.0087597854870361 ...
        0.00610587951973923 0.00213057015351801 0.000175516248791679 ...
        0.00211502916209051 0.00668177730008021 0.0102770524669461 ...
        0.00978529959342391 0.00520717789092188 -9.68622309952549e-05 ...
        -0.00194672375185935 0.00122761657596358 0.00685783138655942 ...
        0.0100435384678849 0.00746015497327941 0.000277531158546833 ...
        -0.00643592944175924 -0.00762622590007735 -0.00249604185992126 ...
        0.00444757656485391 0.0067020528678043 0.00105561570135847 ...
        -0.00939802609552207 -0.0172565483685112 -0.016619276784581 ...
        -0.00820723923410719 0.000570716030362401 0.0011734352886551 ...
        -0.00897279319017724 -0.0236224656423572 -0.0319664983872204 ...
        -0.0272311419277812 -0.0129185200632393 -0.00117331017239006 ...
        -0.00365025480237799 -0.0215342685325378 -0.0429274177831588 ...
        -0.050836627433783 -0.0367326926673355 -0.009369989253144 ...
        0.00915170160926873 -0.000878955851827194 -0.0396648492554115 ...
        -0.082464863773055 -0.0919818721217582 -0.042358204827541 ...
        0.0606191937802189 0.177542967109606 0.254869651066755 0.254869651066755 ...
        0.177542967109606 0.0606191937802189 -0.042358204827541 ...
        -0.0919818721217582 -0.082464863773055 -0.0396648492554115 ...
        -0.000878955851827194 0.00915170160926873 -0.009369989253144 ...
        -0.0367326926673355 -0.050836627433783 -0.0429274177831588 ...
        -0.0215342685325378 -0.00365025480237799 -0.00117331017239006 ...
        -0.0129185200632393 -0.0272311419277812 -0.0319664983872204 ...
        -0.0236224656423572 -0.00897279319017724 0.0011734352886551 ...
        0.000570716030362401 -0.00820723923410719 -0.016619276784581 ...
        -0.0172565483685112 -0.00939802609552207 0.00105561570135847 ...
        0.0067020528678043 0.00444757656485391 -0.00249604185992126 ...
        -0.00762622590007735 -0.00643592944175924 0.000277531158546833 ...
        0.00746015497327941 0.0100435384678849 0.00685783138655942 ...
        0.00122761657596358 -0.00194672375185935 -9.68622309952549e-05 ...
        0.00520717789092188 0.00978529959342391 0.0102770524669461 ...
        0.00668177730008021 0.00211502916209051 0.000175516248791679 ...
        0.00213057015351801 0.00610587951973923 0.0087597854870361 ...
        0.00797216761812795 0.00440291600455968 0.000797506115569595 ...
        -0.000268988101050573 0.00163443250217651 0.00460204873319832 ...
        0.00600971890700992 0.00458417102657183 0.00130773047657074 ...
        -0.00145988328605218 -0.00186500661370563 4.55698323325315e-05 ...
        0.00244897994024061 0.00321103298779038 0.00151796380360198 ...
        -0.00155465369499306 -0.00390425973016115 -0.00399134798982079 ...
        -0.00196386224748913 0.000468827107608151 0.00126179780429956 ...
        -0.000549009571814204 -0.00421107546256976 -0.00776616834395685 ...
        -0.00928301082581308 -0.00796803109331658 -0.00449135390003206 ...
        -0.000444939976507609 0.00261093795856436 0.00389433853288986 ...
        0.00357158990637428 0.00239914775268492 0.00117724471920168 ...
        0.000375790071265041]);
end

y = step(Hd,double(x));


% [EOF]
